import numpy as НП
import skfuzzy as Нечёт
from skfuzzy import control as Кон
from PIL import Image, ImageTk


def нормализацияКаналов(ПутьФайла):
    try:
        Изображение = Image.open(ПутьФайла)
        Изображение = Изображение.resize((720, 720), Image.LANCZOS)
    except IOError:
        print("Ошибка при чтении файла изображения.")
        return None
    МассивИзображения = НП.array(Изображение)
    КрасныйКанал = МассивИзображения[:, :, 0].flatten() / 255.0
    ЗелёныйКанал = МассивИзображения[:, :, 1].flatten() / 255.0
    СинийКанал = МассивИзображения[:, :, 2].flatten() / 255.0

    return КрасныйКанал, ЗелёныйКанал, СинийКанал

def Анфиса(Путь):
    Красный = Кон.Antecedent(НП.arange(0, 1.1, 0.1), 'Красный')
    Зелёный = Кон.Antecedent(НП.arange(0, 1.1, 0.1), 'Зелёный')
    Синий = Кон.Antecedent(НП.arange(0, 1.1, 0.1), 'Синий')
    ВыходнойКласс = Кон.Consequent(НП.arange(0, 1.1, 0.1), 'ВыходнойКласс')

    Красный['Тёмный'] = Нечёт.trimf(Красный.universe, [0, 0, 0.5])
    Красный['Светлый'] = Нечёт.trimf(Красный.universe, [0.5, 1, 1])
    Зелёный['Тёмный'] = Нечёт.trimf(Зелёный.universe, [0, 0, 0.5])
    Зелёный['Светлый'] = Нечёт.trimf(Зелёный.universe, [0.5, 1, 1])
    Синий['Тёмный'] = Нечёт.trimf(Синий.universe, [0, 0, 0.5])
    Синий['Светлый'] = Нечёт.trimf(Синий.universe, [0.5, 1, 1])

    ВыходнойКласс['Жёлтый'] = Нечёт.trimf(ВыходнойКласс.universe, [0.8, 1, 1])
    ВыходнойКласс['Белый'] = Нечёт.trimf(ВыходнойКласс.universe, [0.8, 1, 1])
    ВыходнойКласс['Красный'] = Нечёт.trimf(ВыходнойКласс.universe, [0.8, 1, 1])
    ВыходнойКласс['Фиолетовый'] = Нечёт.trimf(ВыходнойКласс.universe, [0.8, 1, 1])
    ВыходнойКласс['Зелёный'] = Нечёт.trimf(ВыходнойКласс.universe, [0.8, 1, 1])
    ВыходнойКласс['Бирюзовый'] = Нечёт.trimf(ВыходнойКласс.universe, [0.8, 1, 1])
    ВыходнойКласс['Чёрный'] = Нечёт.trimf(ВыходнойКласс.universe, [0.8, 1, 1])
    ВыходнойКласс['Синий'] = Нечёт.trimf(ВыходнойКласс.universe, [0.8, 1, 1])


    Правило1 = Кон.Rule(Красный['Светлый'] & Зелёный['Светлый'] & Синий['Тёмный'], ВыходнойКласс['Жёлтый'])
    Правило2 = Кон.Rule(Красный['Светлый'] & Зелёный['Светлый'] & Синий['Светлый'], ВыходнойКласс['Белый'])
    Правило3 = Кон.Rule(Красный['Светлый'] & Зелёный['Тёмный'] & Синий['Тёмный'], ВыходнойКласс['Красный'])
    Правило4 = Кон.Rule(Красный['Светлый'] & Зелёный['Тёмный'] & Синий['Светлый'], ВыходнойКласс['Фиолетовый'])
    Правило5 = Кон.Rule(Красный['Тёмный'] & Зелёный['Светлый'] & Синий['Тёмный'], ВыходнойКласс['Зелёный'])
    Правило6 = Кон.Rule(Красный['Тёмный'] & Зелёный['Светлый'] & Синий['Светлый'], ВыходнойКласс['Бирюзовый'])
    Правило7 = Кон.Rule(Красный['Тёмный'] & Зелёный['Тёмный'] & Синий['Тёмный'], ВыходнойКласс['Чёрный'])
    Правило8 = Кон.Rule(Красный['Тёмный'] & Зелёный['Тёмный'] & Синий['Светлый'], ВыходнойКласс['Синий'])

    СистемаЦвета = Кон.ControlSystem([Правило1, Правило2, Правило3, Правило4, Правило5, Правило6, Правило7, Правило8])
    ЦветАнализ = Кон.ControlSystemSimulation(СистемаЦвета)
    #Каналы = нормализацияКаналов(r"C:\Users\bvvzx\YandexDisk\d&d\Иконки\czy to freddy fazbear.png")
    Каналы = нормализацияКаналов(Путь)
    Маска = НП.zeros((720, 720, 3))
    for i in range(518400):
        ЦветАнализ.input['Красный'] = Каналы[0][i]
        ЦветАнализ.input['Зелёный'] = Каналы[1][i]
        ЦветАнализ.input['Синий'] = Каналы[1][i]
        ЦветАнализ.compute()
        Маска[(i // 720)][i - ((i // 720) * 720)][0] = (int)(ЦветАнализ.output['ВыходнойКласс'] * 255)
        Маска[(i // 720)][i - ((i // 720) * 720)][1] = (int)(ЦветАнализ.output['ВыходнойКласс'] * 255)
        Маска[(i // 720)][i - ((i // 720) * 720)][2] = (int)(ЦветАнализ.output['ВыходнойКласс'] * 255)
    return ImageTk.PhotoImage(Image.fromarray(Маска.astype(НП.uint8)))