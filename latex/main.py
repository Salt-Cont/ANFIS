from tkinter import *
from tkinter import filedialog
from tkinter.ttk import Combobox
from ANFIS import АнфисаРаспознать
from ANFIS import АнфисаТренировать
from DB import сохранить
from DB import загрузитьСписокНаборов
from DB import загрузитьНабор
from PIL import Image

global Набор
Окно = Tk()
Окно.geometry("1112x720")
Окно.resizable(False, False)
Окно.title("Нечётко-нейронная система")
Окно.iconbitmap(default="Иконка.ico")
ПолеИзображения = Canvas(bg="Gray", height=1080, width=720)
ПолеИзображения.pack(fill=BOTH)
НижняяГраница = 720
ПраваяГраница = 1112
ВысотаКнопки = 25
Интервал = 2
def загрузитьИзображение():
    global Изображение
    global Путь
    Путь = filedialog.askopenfilename(filetypes=[("Изображения", "*.png;*.jpg;*.jpeg")])
    if Путь:
        Изображение = PhotoImage(file=Путь)
        Ширина = Изображение.width()
        Высота = Изображение.height()
        НовоеИзображение = PhotoImage(width=720, height=720)
        for x in range(720):
            for y in range(720):
                х = int(x * Ширина / 720)
                у = int(y * Высота / 720)
                rgb = '#%02x%02x%02x' % Изображение.get(х, у)
                НовоеИзображение.put(rgb, (x, y))
        Изображение = НовоеИзображение
        ПолеИзображения.create_image(Интервал + 187, Интервал, anchor=NW, image=Изображение, tags='Старое')
def распознать():
    try:
        if Путь:
            ОкноВыбораМодели = Toplevel()
            ОкноВыбораМодели.title("Выберите модель для распознания")
            ОкноВыбораМодели.geometry("300x70")
            СписокМоделей = []
            Список = загрузитьСписокНаборов()
            for Элемент in Список:
                СписокМоделей.append(Элемент)
            global ВыбранныйЭлементСписка
            ВыбранныйЭлементСписка = StringVar(value=СписокМоделей[0])
            Список = Combobox(ОкноВыбораМодели, values=СписокМоделей, textvariable=ВыбранныйЭлементСписка)
            Список.pack(anchor=NW, padx=6, pady=6, fill='x')
            КнопкаПодтверждения = Button(ОкноВыбораМодели, text="Выбрать", command=lambda: выбрать(ОкноВыбораМодели))
            КнопкаПодтверждения.pack(anchor=NW, padx=6, pady=6)
            ОкноВыбораМодели.grab_set()
    except Exception as e:
        print('Нет пути файла:\n{}'.format(e))

def выбрать(ОкноВыбора):
    global Изображение
    АнфисаРаспознать(Путь, ВыбранныйЭлементСписка.get())
    ПолеИзображения.delete('Старое')
    Изображение = PhotoImage(file='output_image.png')
    ПолеИзображения.create_image(Интервал + 187, Интервал, anchor=NW, image=Изображение)
    ОкноВыбора.grab_release()
    ОкноВыбора.destroy()

def сохранитьРезультатРаспознания():
    global Путь
    Путь = filedialog.asksaveasfile(mode='w', filetypes=[("Изображения", "*.png;*.jpg;*.jpeg")])
    Изображение = Image.open('output_image.png')
    Изображение.save(Путь.name)
    Изображение.close()



def обучать():
    ОкноВыбораНабора = Toplevel()
    ОкноВыбораНабора.title("Выберите обучающий набор")
    ОкноВыбораНабора.geometry("300x70")
    СписокНаборов = []
    Список = загрузитьСписокНаборов()
    for Элемент in Список:
        СписокНаборов.append(Элемент)
    СписокНаборов.append('Новый набор обучения')
    global ВыбранныйЭлементСписка
    ВыбранныйЭлементСписка = StringVar(value=СписокНаборов[0])
    Список = Combobox(ОкноВыбораНабора, values=СписокНаборов, textvariable=ВыбранныйЭлементСписка)
    Список.pack(anchor=NW, padx=6, pady=6, fill='x')
    КнопкаПодтверждения = Button(ОкноВыбораНабора, text="Подтвердить", command=lambda: подтвердить(ОкноВыбораНабора))
    КнопкаПодтверждения.pack(anchor=NW, padx=6, pady=6)
    ОкноВыбораНабора.grab_set()

def подтвердить(ОкноВыбора):
    global Путь
    global Данные
    global Размер
    global НазваниеНабора
    ОкноВыбора.grab_release()
    ОкноВыбора.destroy()
    НазваниеНабора = ВыбранныйЭлементСписка.get()
    if НазваниеНабора == 'Новый набор обучения':
        Путь = filedialog.askopenfilename(filetypes=[("Набор обучения", "*.txt;*.json")])
        Данные = []
        with open(Путь, "r") as Файл:
            for Список in Файл:
                Данные.append(Список.split())
        Размер = []
        Размер.append(len(Данные))
        Размер.append(len(Данные[0]))
        ОкноНазвания = Toplevel()
        ОкноНазвания.title("Введите имя модели")
        ОкноНазвания.geometry("300x70")
        global ИмяМодели
        ИмяМодели = StringVar()
        ПолеВвода = Entry(ОкноНазвания, textvariable=ИмяМодели)
        ПолеВвода.insert(0, 'Имя модели')
        ПолеВвода.pack(anchor=NW, padx=6, pady=6, fill='x')
        КнопкаОтправки = Button(ОкноНазвания, text="Отправить", command=lambda: отправить(ОкноНазвания))
        КнопкаОтправки.pack(anchor=NW, padx=6, pady=6)
        ОкноНазвания.grab_set()
    else:
        (Данные, Размер) = загрузитьНабор(НазваниеНабора)
        АнфисаТренировать(Данные, Размер, НазваниеНабора)
        сохранить(НазваниеНабора, Данные)


def отправить(ОкноНазвания):
    ОкноНазвания.grab_release()
    АнфисаТренировать(Данные, Размер, ИмяМодели.get())
    сохранить(ИмяМодели.get(), Данные)
    ОкноНазвания.destroy()

КнопкаЗагрузкиИзображения = Button(ПолеИзображения, text=f"Загрузить изображение", command=загрузитьИзображение)
ПолеИзображения.create_window(Интервал, Интервал, anchor=NW, window=КнопкаЗагрузкиИзображения)

КнопкаНачалаРаспознания = Button(ПолеИзображения, text=f"Распознать", command=распознать)
ПолеИзображения.create_window(Интервал, (НижняяГраница - ВысотаКнопки - Интервал), anchor=NW, window=КнопкаНачалаРаспознания)
КнопкаНачалаОбучения = Button(ПолеИзображения, text=f"Обучать", command=обучать)
ПолеИзображения.create_window(Интервал + 74, (НижняяГраница - ВысотаКнопки - Интервал), anchor=NW, window=КнопкаНачалаОбучения)

КнопкаСохраненияДанныхРаспознания = Button(ПолеИзображения, text=f"Сохранить результат распознания", command=сохранитьРезультатРаспознания)
ПолеИзображения.create_window(ПраваяГраница - Интервал - 200, Интервал, anchor=NW, window=КнопкаСохраненияДанныхРаспознания)

Окно.mainloop()